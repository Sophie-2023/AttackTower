#include <iostream>

#include "EtatExploitation.h"
#include <EtatEnRoute.h>
#include "Carte.h"

EtatExploitation::EtatExploitation(TroupeManager* tm, sf::RenderWindow* win)
    : troupeManager(tm), window(win) {
  barreProgression.setSize({50.f, 5.f});
  barreProgression.setFillColor(sf::Color::Blue);
}

void EtatExploitation::agir(Troupe& troupe, sf::Time elapsedTime) {
  //std::cout << "J'exploite la foret" << std::endl;
  sf::Vector2f pos = troupe.getPosition();
  barreProgression.setPosition({pos.x - 20, pos.y - 40});

  tempsEcoule += elapsedTime;
  // Si le temps écoulé dépasse le temps total, on change d'état
  if (tempsEcoule >= tempsTotal) {
    std::unique_ptr<EtatEnRoute> etatEnRoute =
    std::make_unique<EtatEnRoute>(troupe.getCarte()->getBase(), troupeManager, window);
    troupe.changerEtat(std::move(etatEnRoute));
    return;
  }
 
}

void EtatExploitation::draw(sf::RenderWindow& window) const {
  window.draw(barreProgression);
}